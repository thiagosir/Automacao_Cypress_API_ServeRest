{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-22T16:18:55.878Z",
    "end": "2022-06-22T16:18:56.666Z",
    "duration": 788,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d62ad0e8-47f3-49b0-9e19-521670716234",
      "title": "",
      "fullFile": "cypress/integration/usuarios.spec.js",
      "file": "cypress/integration/usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77518aeb-cab0-4723-9be0-11ea5eaa7143",
          "title": "Casos de teste do endpoint /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "128b2a5f-9179-47c4-866b-750b63709979",
              "title": "Cadastrar e deletar usuário",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um usuário",
                  "fullTitle": "Casos de teste do endpoint /usuarios da API Serverest Cadastrar e deletar usuário Deve cadastrar um usuário",
                  "timedOut": null,
                  "duration": 305,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_usuarios.default.adicionarUsuarioComSucesso().then(res => {\n  cy.writeFile('./cypress/fixtures/userId.json', res.body);\n  cy.validacaoContrato(res, 'post-usuarios', 201).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validaAdicaoDeUsuarioComSucesso(res);\n});",
                  "err": {},
                  "uuid": "22f03f7a-5316-45c7-a772-a2e235c4ed9d",
                  "parentUUID": "128b2a5f-9179-47c4-866b-750b63709979",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve cadastrar um novo usuário, retornando que o usuário já existe",
                  "fullTitle": "Casos de teste do endpoint /usuarios da API Serverest Cadastrar e deletar usuário Não deve cadastrar um novo usuário, retornando que o usuário já existe",
                  "timedOut": null,
                  "duration": 230,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_usuarios.default.adicionarUsuarioSemSucesso().then(res => {\n  cy.validacaoContrato(res, 'post-usuarios', 400).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validaAdicaoDeUsuarioSemSucesso(res);\n});",
                  "err": {},
                  "uuid": "cbe58ff8-b372-4664-8373-8f584dc7657d",
                  "parentUUID": "128b2a5f-9179-47c4-866b-750b63709979",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um usuário",
                  "fullTitle": "Casos de teste do endpoint /usuarios da API Serverest Cadastrar e deletar usuário Deve deletar um usuário",
                  "timedOut": null,
                  "duration": 225,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_usuarios.default.deletarUsuarioComSucesso().then(res => {\n  cy.validacaoContrato(res, 'delete-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido'));\n  _validaServerest.default.validaRemocaoDeUsuarioComSucesso(res);\n});",
                  "err": {},
                  "uuid": "c2e57497-f6e7-476e-baa5-cd8ae2c23f5f",
                  "parentUUID": "128b2a5f-9179-47c4-866b-750b63709979",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22f03f7a-5316-45c7-a772-a2e235c4ed9d",
                "cbe58ff8-b372-4664-8373-8f584dc7657d",
                "c2e57497-f6e7-476e-baa5-cd8ae2c23f5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 760,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}